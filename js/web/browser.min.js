vweb.utils.make_immutable(BLOCKS);
const PB=true;
const FULL_SCREEN=false;
const SIDEBAR_SPACING=15;
const SPACING=20;
const MIN_SIDEBAR_WIDTH=1400;
const MIN_MINIMAP_WIDTH=1000;
let OG_TOPBAR_HEIGHT=125;
let TOPBAR_HEIGHT=HEADLESS?0:OG_TOPBAR_HEIGHT;
const TITLE_TEXT_FONT_SIZE=18;
const SUBTITLE_TEXT_FONT_SIZE=16;
const TEXT_FONT_SIZE=15;
const PARAM_NAME_FONT_SIZE=15;
const PARAM_TEXT_FONT_SIZE=15;
const PARAM_TYPE_FONT_SIZE=12;
const CLOSE_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/close.webp";
const ARROW_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/arrow.webp";
const MENU_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/menu.webp";
const MOON_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/moon.webp";
const SEARCH_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/search.webp";
const ARROW_LONG_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/arrow.long.webp";
const PLUS_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/plus.webp";
const MINUS_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/minus.webp";
const COPY_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/copy.webp";
const CHECK_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/check.webp";
const WARNING_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/error.webp";
const NOTE_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/megaphone.webp";
const THUMBS_UP="https://raw.githubusercontent.com/librisio/libris/master/media/icons/thumbs_up.webp";
const THUMBS_DOWN="https://raw.githubusercontent.com/librisio/libris/master/media/icons/thumbs_down.webp";
const EDITS_IMG="https://raw.githubusercontent.com/librisio/libris/master/media/icons/edits.webp";
const SOCIALS_DIR="https://raw.githubusercontent.com/librisio/libris/master/media/socials/";
let NAVIGATION_ENABLED=true;
let ACTIVE_NAVIGATION=null;
let ACTIVE_LANG_POPUP=null;
let RECENTS=[];
let SIDEBAR_ELEMENTS={};
let PAGE_SECTION_ELEMENTS={};
const FEEDBACK_WEBHOOK="http://localhost:8000/api/feedback";
const FEEDBACK_SUBMITTED={};
let FEEDBACK_WIDGET;
const SUGGESTIONS_WEBHOOK="http://localhost:8000/api/suggestions";
let SUGGESTIONS_WIDGET,SUGGESTIONS_POPUP;
const ANALYTICS_WEBHOOK="http://localhost:8000/api/analytics";
const ANALYTICS={
data:[],
add_view(id){
this.data.append({
type:"view",
id,
timestamp:Date.now(),
})
},
add_duration(id,duration){
if (duration>=1000){
this.data.append({
type:"duration",
id,
duration,
timestamp:Date.now(),
})
}
},
add_device(desktop=true){
this.data.append({
type:"device",
desktop,
timestamp:Date.now(),
})
},
add_referrer(referrer){
this.data.append({
type:"referrer",
referrer,
timestamp:Date.now(),
})
},
async submit(){
this.add_device(!vweb.utils.is_mobile());
if (CONTENT.analytics_prev_id!==null){
this.add_duration(CONTENT.analytics_prev_id,Date.now()-CONTENT.analytics_prev_timestamp);
}
this.add_referrer(document.referrer||'direct')
await vweb.utils.request({
url:ANALYTICS_WEBHOOK,
method:"POST",
data:{
version:1,
uid:UID,
project:PROJECT,
data:this.data,
},
})
}
}
let local_storage_theme=localStorage.getItem("libris_theme");
if (local_storage_theme==="light_theme"&&THEME.id!=="light_theme"){
THEME=LIGHT_THEME;
Object.keys(THEME).iterate((key)=>{
document.documentElement.style.setProperty(`--${key}`,THEME[key]);
});
} else if (local_storage_theme==="dark_theme"&&THEME.id!=="dark_theme"){
THEME=DARK_THEME;
Object.keys(THEME).iterate((key)=>{
document.documentElement.style.setProperty(`--${key}`,THEME[key]);
});
}
Title()
.font_size(36)
.color("var(--title_fg)")
.padding(0)
.margin(0,0,SPACING,0)
.set_default()
Subtitle()
.font_size(24)
.color("var(--title_fg)")
.padding(0)
.margin(SPACING*2,0,10,0)
.set_default()
class ChildTitleElement extends TitleElement{
constructor(text){
super(text);
this
.font_size(30)
.color("var(--title_fg)")
.padding(0)
.margin(0,0,SPACING,0)
}
};function ChildTitle(...args){return new ChildTitleElement(...args)};;vweb.elements.register(ChildTitleElement);
Text()
.font_size(TITLE_TEXT_FONT_SIZE)
.line_height("1.4em")
.color("var(--fg)")
.padding(0)
.margin(0,0,10,0)
.wrap(true)
.white_space("pre-wrap")
.word_wrap("break-word")
.overflow_wrap("break-word")
.tab_size(THEME.tab_size)
.set_default()
class SubtextElement extends TextElement{
constructor(text){
super(text);
this
.font_size(14)
.color("var(--subtext_fg)")
.padding(0)
.margin(0,0,10,0)
.wrap(true)
.line_height("1.4em")
.white_space("pre-wrap")
.word_wrap("break-word")
.overflow_wrap("break-word")
.tab_size(THEME.tab_size)
}
};function Subtext(...args){return new SubtextElement(...args)};;vweb.elements.register(SubtextElement);
Input()
.font_size(12)
.color("var(--fg)")
.padding(0)
.margin(0,0,10,0)
.background("none")
.border_radius(0)
.padding(0)
.overflow("scroll")
.wrap(false)
.set_default()
CodePre()
.font_family("inherit")
.color("inherit")
.font_size("inherit")
.background("none")
.border_radius("none")
.padding(15,20)
.tab_size(THEME.tab_size)
.overflow("auto")
.class("hide_scrollbar")
.set_default()
CodeBlock()
.display("block")
.font_family("var(--code_font)")
.color("var(--codeblock_fg)")
.background("var(--codeblock_bg)")
.shadow("0px 0px 5px #00000005")
.font_size(13)
.line_height(18)
.white_space("pre")
.padding(15,20)
.margin(0,0,5,0)
.border_radius(10)
.overflow("auto")
.class("hide_scrollbar")
.max_width("100%")
.tab_size(THEME.tab_size)
.set_default()
Divider()
.background("var(--divider_bg)")
.margin(0,0,SPACING,0)
.set_default()
Link()
.color(THEME.anchor_fg)
.on_theme_update((e)=>e.color(THEME.anchor_fg))
.set_default()
function ProjectIcon(){
const image=Image(THEME===DARK_THEME?ICON_DARK:ICON_LIGHT)
.object_fit("contain")
.flex_shrink(0)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.on_theme_update(()=>{
if (THEME===DARK_THEME){
image.src(ICON_DARK)
} else {
image.src(ICON_LIGHT)
}
})
.on_click(()=>vweb.utils.redirect("/"))
return image;
}
function Tag(text,theme_color){
return VStack(text)
.font_size(12)
.color(THEME[theme_color])
.border_radius(15)
.border(1,THEME[theme_color])
.background(THEME[theme_color]+"20")
.padding(2.5,7.5,2.5,7.5)
.margin(0)
.flex_shrink(0)
.on_theme_update((e)=>{
e.color(THEME[theme_color]);
e.border(1,THEME[theme_color]);
e.background(THEME[theme_color]+"20")
});
};
function Background(){
const e=View()
.position(0,0,0,0)
.background(THEME.bg)
.on_theme_update((e)=>{
e.background(THEME.bg);
e.brightness(THEME.bg_brightness);
if (THEME.bg_blur!=0){
e.position(-THEME.bg_blur-5,-THEME.bg_blur-5,-THEME.bg_blur-5,-THEME.bg_blur-5)
e.blur(THEME.bg_blur)
} else {
e.position(0,0,0,0)
e.filter("")
}
})
if (THEME.bg_brightness!=100){
e.brightness(THEME.bg_brightness);
}
if (THEME.bg_blur!=0){
e.position(-THEME.bg_blur-5,-THEME.bg_blur-5,-THEME.bg_blur-5,-THEME.bg_blur-5)
e.blur(THEME.bg_blur)
}
return e;
}
function Warning(text){
return HStack(
VStack(
ImageMask(WARNING_IMG)
.mask_color("var(--warning_bg)")
.frame(17.5,17.5),
)
.center_vertical(),
Divider()
.background("var(--warning_bg)")
.flex_shrink(0)
.frame(1,"auto")
.margin(0,15),
Span(text)
.class("warning_content"),
)
.line_height("1.5em")
.font_size("0.95em")
.color("var(--warning_bg)")
.background("var(--warning_bg_20)")
.border(1,"var(--warning_bg)")
.padding(15,20)
.border_radius(10)
.margin(0)
.align_height()
}
function Note(text){
return HStack(
VStack(
ImageMask(NOTE_IMG)
.mask_color("var(--note_bg)")
.frame(17.5,17.5),
)
.center_vertical(),
Divider()
.background("var(--note_bg)")
.flex_shrink(0)
.frame(1,"auto")
.margin(0,15),
Span(text)
.class("note_content"),
)
.line_height("1.5em")
.font_size("0.95em")
.color("var(--note_bg)")
.background("var(--note_bg_20)")
.border(1,"var(--note_bg)")
.padding(15,20)
.border_radius(10)
.margin(0)
.align_height()
}
const SuggestedPage=(img,title,description,links=[{text:null,id:null,url:null}])=>{
return HStack(
img==null?null :ImageMask(img)
.frame(30,30)
.flex_shrink(0)
.margin(11,25,0,0)
.mask_color("var(--title_fg)"),
VStack(
Subtitle(title)
.margin(0)
.ellipsis_overflow(true),
Subtext(description),
links==null?null :HStack(
ForEach(links,(item,index)=>{
return VStack(
Link(item.text)
.class("link")
.leading()
.width("fit-content")
.font_size(14)
.ellipsis_overflow(true)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
)
.on_click(()=>{
if (item.url!=null){
vweb.utils.redirect(item.url);
} else {
render_id(item.id);
}
})
})
)
.align_height()
.width("100%")
.overflow("hidden")
.assign_to_parent_as("links")
.wrap(true)
.media(
"width >= 400px",
(e)=>e.side_by_side({columns:2,hspacing:10,vspacing:5}),
(e)=>e.side_by_side({columns:1,hspacing:10,vspacing:5}),
)
)
.width("100%")
.overflow("hidden")
.assign_to_parent_as("content")
)
.side_by_side_basis(0.5)
.media("width >= 700px",(e)=>e.side_by_side_basis(0.5),(e)=>e.side_by_side_basis(1.0))
.overflow("hidden")
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.border_radius(10)
.padding(20,20)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.extend({
maximize:function(){
this.width("100%")
this.content.links.remove_all_media();
this.content.links.media("width >= 900px",(e)=>e.side_by_side({columns:4,hspacing:10,vspacing:5}))
this.content.links.media("(width >= 600px) and (width < 900px)",(e)=>e.side_by_side({columns:2,hspacing:10,vspacing:5}));
this.content.links.media("width < 400px",(e)=>e.side_by_side({columns:1,hspacing:10,vspacing:5}));
return this;
}
})
}
function FeedbackWidget(){
const negative=HStack(
Text("No")
.font_size(14)
.margin(0,10,0,0)
.padding(0)
.color("var(--fg)"),
ImageMask(THUMBS_DOWN)
.mask_color("var(--fg)")
.margin_top(2.5)
.fixed_frame(10,10)
)
.assign_to_parent_as("positive")
.margin(0,5,0,0)
.stretch(true)
.padding(2.5,10)
.background("var(--widget_bg)")
.border_radius(15)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>e.hover_brightness(THEME.click_brightness,THEME.hover_brightness))
.border(1,"var(--divider_bg)")
.center()
.center_vertical()
.on_click(()=>{
if (FEEDBACK_WIDGET.submitted_count>=3){
RESPONSE_STATUS.error("You have reached the maximum amount of feedback submittance.");
return resolve();
}
vweb.utils.request({
url:FEEDBACK_WEBHOOK,
method:"POST",
data:{
uid:UID,
project:PROJECT,
id:CONTENT.rendered_block.id,
positive:false,
},
})
.then(()=>{
FEEDBACK_WIDGET.submitted(false)
resolve();
RESPONSE_STATUS.success("Successfully submitted your feedback.");
++FEEDBACK_WIDGET.submitted_count;
})
.catch((e)=>{
console.error(e)
resolve();
RESPONSE_STATUS.error("Failed to submit your feedback.");
})
})
const positive=HStack(
Text("Yes")
.font_size(14)
.margin(0,10,0,0)
.padding(0)
.color("var(--fg)"),
ImageMask(THUMBS_UP)
.mask_color("var(--fg)")
.fixed_frame(10,10)
)
.assign_to_parent_as("negative")
.margin(0,0,0,5)
.stretch(true)
.padding(2.5,10)
.background("var(--widget_bg)")
.border_radius(15)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>e.hover_brightness(THEME.click_brightness,THEME.hover_brightness))
.border(1,"var(--divider_bg)")
.center()
.center_vertical()
.on_click(async ()=>{
return new Promise((resolve)=>{
if (FEEDBACK_WIDGET.submitted_count>=3){
RESPONSE_STATUS.error("You have reached the maximum amount of feedback submittance.");
return resolve();
}
vweb.utils.request({
url:FEEDBACK_WEBHOOK,
method:"POST",
data:{
uid:UID,
project:PROJECT,
id:CONTENT.rendered_block.id,
positive:true,
},
})
.then(()=>{
FEEDBACK_WIDGET.submitted(true)
resolve();
RESPONSE_STATUS.success("Successfully submitted your feedback.");
++FEEDBACK_WIDGET.submitted_count;
})
.catch((e)=>{
console.error(e)
resolve();
RESPONSE_STATUS.error("Failed to submit your feedback.");
})
})
})
FEEDBACK_WIDGET=HStack(
Title("Was this page helpful?")
.font_size(14)
.line_height(16.5)
.margin(0,15,0,0)
.overflow("hidden")
.text_overflow("ellipsis")
.center()
.color("var(--title_fg)")
.font_weight("normal")
.flex_shrink(0),
negative,
positive,
)
.center_vertical()
.extend({
submitted_count:0,
submitted:function(is_positive=null){
localStorage.setItem(`libris/${UID}/${PROJECT}/feedback/${CONTENT.rendered_block.id}`,is_positive?"1":"0");
if (is_positive){
positive.child(0).transition("color 300ms ease-in-out")
positive.child(1).transition("background 300ms ease-in-out")
positive.transition("background 300ms ease-in-out, border-color 300ms ease-in-out")
negative.child(0).transition("color 300ms ease-in-out")
negative.child(1).transition("background 300ms ease-in-out")
negative.transition("background 300ms ease-in-out, border-color 300ms ease-in-out")
negative.getBoundingClientRect();
positive.disable();
positive
.border_color("var(--tag_success)")
.background(THEME.tag_success+"20")
.remove_on_theme_updates()
.on_theme_update((e)=>e.background(THEME.tag_success+"20"))
positive.child(0).color("var(--tag_success)")
positive.child(1).mask_color("var(--tag_success)")
negative.enable();
negative
.border_color("var(--divider_bg)")
.background("var(--widget_bg)")
.remove_on_theme_updates()
negative.child(0).color("var(--fg)")
negative.child(1).mask_color("var(--fg)")
setTimeout(()=>{
positive.child(0).transition("")
positive.child(1).transition("")
positive.transition("")
negative.child(0).transition("")
negative.child(1).transition("")
negative.transition("")
},1000);
} else {
positive.child(0).transition("color 300ms ease-in-out")
positive.child(1).transition("background 300ms ease-in-out")
positive.transition("background 300ms ease-in-out, border-color 300ms ease-in-out")
negative.child(0).transition("color 300ms ease-in-out")
negative.child(1).transition("background 300ms ease-in-out")
negative.transition("background 300ms ease-in-out, border-color 300ms ease-in-out")
negative.getBoundingClientRect();
negative.disable();
negative
.border_color("var(--tag_error)")
.background(THEME.tag_error+"20")
.remove_on_theme_updates()
.on_theme_update((e)=>e.background(THEME.tag_error+"20"))
negative.child(0).color("var(--tag_error)")
negative.child(1).mask_color("var(--tag_error)")
positive.enable();
positive
.border_color("var(--divider_bg)")
.background("var(--widget_bg)")
.remove_on_theme_updates()
positive.child(0).color("var(--fg)")
positive.child(1).mask_color("var(--fg)")
setTimeout(()=>{
positive.child(0).transition("")
positive.child(1).transition("")
positive.transition("")
negative.child(0).transition("")
negative.child(1).transition("")
negative.transition("")
},1000);
}
}
})
const cached=localStorage.getItem(`libris/${UID}/${PROJECT}/feedback/${CONTENT.rendered_block.id}`);
if (cached==="1"||cached==="0"){
FEEDBACK_WIDGET.submitted(cached==="1"?true :false);
}
return FEEDBACK_WIDGET;
}
function SuggestionsWidget(){
SUGGESTIONS_WIDGET=HStack(
Text("Suggest edits")
.font_size(14)
.margin(0,10,0,0)
.padding(0)
.color("var(--fg)"),
ImageMask(EDITS_IMG)
.mask_color("var(--fg)")
.fixed_frame(10,10)
)
.margin(0,0,0,0)
.padding(2.5,15)
.background("var(--widget_bg)")
.border_radius(15)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>e.hover_brightness(THEME.click_brightness,THEME.hover_brightness))
.border(1,"var(--divider_bg)")
.center()
.center_vertical()
.on_click(async ()=>{
return new Promise((resolve)=>{
if (SUGGESTIONS_WIDGET.submitted_count>=3){
RESPONSE_STATUS.error("You have reached the maximum amount of feedback submittance.");
return resolve();
}
SUGGESTIONS_POPUP.popup();
})
})
.extend({
submitted_count:0,
submitted:function(){
localStorage.setItem(`libris/${UID}/${PROJECT}/suggestions/${CONTENT.rendered_block.id}`,"1");
this.child(0).transition("color 300ms ease-in-out")
this.child(1).transition("background 300ms ease-in-out")
this.transition("background 300ms ease-in-out, border-color 300ms ease-in-out")
this.getBoundingClientRect();
this
.border_color("var(--tag_success)")
.background(THEME.tag_success+"20")
.remove_on_theme_updates()
.on_theme_update((e)=>e.background(THEME.tag_success+"20"))
this.child(0).color("var(--tag_success)")
this.child(1).mask_color("var(--tag_success)")
setTimeout(()=>{
this.child(0).transition("")
this.child(1).transition("")
this.transition("")
},1000);
}
})
if (localStorage.getItem(`libris/${UID}/${PROJECT}/suggestions/${CONTENT.rendered_block.id}`)==="1"){
SUGGESTIONS_WIDGET.submitted();
}
return SUGGESTIONS_WIDGET;
}
SUGGESTIONS_POPUP=(()=>{
const reason=ExtendedInput({
label:"Description",
type:"box",
placeholder:"Description"
})
.font_size(14)
.color("var(--fg)")
.width("100%")
.max_width(320)
.margin_top(25)
.input
.height(100)
.parent();
const popup=Popup({
title:"Suggest Edits",
text:"Provide feedback or corrections to enhance the accuracy and quality of this content.",
no:"Cancel",
yes:"Submit",
auto_hide:false,
on_yes:async ()=>{
return new Promise((resolve)=>{
const popdown=()=>{
popup.getBoundingClientRect();
popup.opacity(0)
setTimeout(()=>{
popup.hide();
resolve();
},700)
}
vweb.utils.request({
url:SUGGESTIONS_WEBHOOK,
method:"POST",
data:{
uid:UID,
project:PROJECT,
id:CONTENT.rendered_block.id,
description:reason.value(),
},
})
.then(async ()=>{
SUGGESTIONS_WIDGET.submitted();
popdown();
RESPONSE_STATUS.success("Successfully submitted your suggestions.");
++SUGGESTIONS_WIDGET.submitted_count;
})
.catch((e)=>{
console.error(e);
popdown();
RESPONSE_STATUS.error("Failed to submit your suggestions.");
})
})
},
on_no:()=>{
popup.opacity(0)
setTimeout(()=>{
popup.hide();
},200)
},
on_popup:()=>{
popup.show();
popup.getBoundingClientRect();
popup.opacity(1)
reason.value("")
},
content:[
reason,
],
});
popup
.hide()
.opacity(0)
.transition("opacity 200ms ease-in-out")
.background("#42424210")
.background_blur(5)
popup.text
.margin_top(0)
popup.content
.center()
popup.yes_button
.border_radius(20)
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.box_shadow("0px 0px 3px #00000010")
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
popup.no_button
.border_radius(20)
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.box_shadow("0px 0px 3px #00000010")
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
popup.widget
.background("var(--bg)")
.padding_bottom(30)
.overflow("hidden")
.border(`1px solid var(--divider_bg)`)
.append(
VStack()
.height(4)
.background(THEME.tint_fg)
.on_theme_update((e)=>e.background(THEME.tint_fg))
.position(null,-20,0,-20)
)
return popup;
})()
function toggle_theme(){
if (THEME===DARK_THEME){
THEME=LIGHT_THEME;
localStorage.setItem("libris_theme","light_theme")
} else {
THEME=DARK_THEME;
localStorage.setItem("libris_theme","dark_theme")
}
Object.keys(THEME).iterate((key)=>{
document.documentElement.style.setProperty(`--${key}`,THEME[key]);
});
vweb.themes.apply_theme_update();
}
function get_block_by_id(id){
let block;
const traverse_1=(block)=>{
if (block.id===id){ return block;}
if (block.children!=null){ return block.children.iterate(traverse_1);}
}
block=BLOCKS.iterate(traverse_1);
if (block!=null){ return block;}
const traverse_2=(block)=>{
if (block.no_lang_id===id){ return block;}
if (block.children!=null){ return block.children.iterate(traverse_2);}
}
block=BLOCKS.iterate(traverse_2);
if (block!=null){ return block;}
const traverse_3=(block)=>{
if (block.no_chapt_id===id){ return block;}
if (block.children!=null){ return block.children.iterate(traverse_3);}
}
block=BLOCKS.iterate(traverse_3);
if (block!=null){ return block;}
const traverse_4=(block)=>{
if (block.full_name===id){ return block;}
if (block.children!=null){ return block.children.iterate(traverse_4);}
}
block=BLOCKS.iterate(traverse_4);
if (block!=null){ return block;}
return null;
}
function render_id(id,add_history=true){
const block=get_block_by_id(id);
if (block==null){
console.error(`Unable to find block "${id}".`);
return null;
}
CONTENT.render(block,add_history);
}
window.addEventListener("popstate",(event)=>{
if (event.state!=null){
localStorage.setItem("libris_id",event.state.id);
render_id(event.state.id, false);
}
})
let last_history=null;
function add_history(block){
if (last_history!=block.id){
history.pushState({id:block.id},block.title);
localStorage.setItem("libris_id",block.id);
last_history=block.id;
RECENTS.push(block);
if (RECENTS.length>25*2){
RECENTS.shift(25)
}
}
}
function get_restapi_method_color(method){
switch (method){
case "GET":
return "var(--method_get)";
case "POST":
return "var(--method_post)";
case "PUT":
return "var(--method_put)";
case "PATCH":
return "var(--method_patch)";
case "DELETE":
return "var(--method_delete)";
case "HEAD":
return "var(--method_head)";
case "OPTIONS":
return "var(--method_options)";
case "CONNECT":
return "var(--method_connect)";
case "TRACE":
return "var(--method_trace)";
case "COPY":
return "var(--method_copy)";
case "MOVE":
return "var(--method_move)";
case "LOCK":
case "UNLOCK":
return "var(--method_lock)";
case "PROPFIND":
case "PROPPATCH":
return "var(--method_propfind)";
case "MKCOL":
return "var(--method_proppatch)";
case "REPORT":
return "var(--method_mkcol)";
case "MKACTIVITY":
return "var(--method_report)";
case "CHECKOUT":
return "var(--method_mkactivity)";
case "CHECKIN":
return "var(--method_checkout)";
case "MERGE":
return "var(--method_merge)";
default:
return "var(--method_get)";
}
}
TitleElement.prototype.add_to_minimap=function(){
PAGE_SECTION_ELEMENTS[this.text()]=this;
return this;
}
SubtitleElement.prototype.add_to_minimap=TitleElement.prototype.add_to_minimap;
const topbar_update_height_elements=[];
function update_topbar_height(height){
OG_TOPBAR_HEIGHT=height;
TOPBAR_HEIGHT=HEADLESS?0:OG_TOPBAR_HEIGHT;
if (HEADLESS===false){
topbar_update_height_elements.iterate((e)=>{
e._on_update_topbar_height(e,TOPBAR_HEIGHT);
})
}
}
VStackElement.prototype.on_update_topbar_height=function(callback){
this._on_update_topbar_height=callback;
topbar_update_height_elements.append(this);
return this;
}
let CONTENT;
const SEARCH_POPUP=VStack(
VStack(
Background(),
VStack(
HStack(
ImageMask(SEARCH_IMG)
.frame(12.5,12.5)
.margin_right(10)
.mask_color("var(--fg)")
.assign_to_parent_as("image"),
RingLoader()
.frame(12.5,12.5)
.margin_right(10)
.background("var(--fg)")
.update()
.hide()
.assign_to_parent_as("loader"),
Input("Search resource")
.font_size(16)
.margin(0)
.padding(0)
.stretch(true)
.overflow_x("scroll")
.wrap(false)
.margin_right(10)
.on_input((element)=>{
if (element.value().length>0){
SEARCH_POPUP.widget.content.header.image.hide();
SEARCH_POPUP.widget.content.header.loader.show();
SEARCH_POPUP.widget.content.header.clear.show();
clearTimeout(element.timeout);
element.timeout=setTimeout(()=>{
SEARCH_POPUP.search();
},100);
} else {
SEARCH_POPUP.clear();
}
})
.assign_to_parent_as("input"),
ImageMask(CLOSE_IMG)
.hide()
.frame(15,15)
.padding(5)
.border_radius("50%")
.background("#FFFFFF10")
.mask_color("var(--fg)")
.on_click(()=>SEARCH_POPUP.clear())
.assign_to_parent_as("clear"),
)
.center_vertical()
.padding(15,15)
.assign_to_parent_as("header"),
Divider()
.margin_bottom(0),
Scroller()
.assign_to_parent_as("content")
.content
.flex("1")
.max_height("100%")
.padding(10,7.5)
.scroll_behavior("smooth")
.parent()
,
Divider()
.margin(0),
HStack(
ImageMask(ARROW_LONG_IMG)
.frame(10,10)
.mask_color("var(--subtext_fg)")
.rotate("75%"),
ImageMask(ARROW_LONG_IMG)
.frame(10,10)
.mask_color("var(--subtext_fg)")
.rotate("25%"),
Span("Navigate")
.font_size(12)
.color("var(--subtext_fg)")
.margin(null,20, null,5),
ImageMask(ARROW_LONG_IMG)
.frame(10,10)
.mask_color("var(--subtext_fg)")
.rotate("50%"),
Span("Select")
.font_size(12)
.color("var(--subtext_fg)")
.margin(null, null, null,5),
)
.font_size(16)
.color("var(--fg)")
.padding(10,15)
.background("var(--widget_bg)")
.center_vertical()
)
.assign_to_parent_as("content")
.z_index(1)
.frame("100%","100%")
)
.position("relative")
.max_height("80%")
.width("100%")
.max_width(500)
.border_radius(10)
.border(1,"var(--divider_bg)")
.overflow("hidden")
.assign_to_parent_as("widget")
)
.position(0,0,0,0)
.padding(15)
.hide()
.center()
.center_vertical()
.background("#42424210")
.background_blur(5)
.drop_shadow("0px 0px 5px #00000030")
.z_index(100)
.transition("opacity 200ms ease-in-out")
.opacity(0)
.on_escape(()=>SEARCH_POPUP.close())
.on_mouse_down((_,event)=>{
if (event.target===SEARCH_POPUP){
SEARCH_POPUP.close();
}
})
.extend({
visible:false,
selected_stack:null,
popup:function(){
if (this.visible){
return this;
}
window.addEventListener("keydown", this.key_down_event)
this.show();
this.getBoundingClientRect();
this.opacity(1)
this.visible=true;
this.widget.content.header.input.getBoundingClientRect()
this.widget.content.header.input.select()
if (this.widget.content.header.input.value().length===0){
this.render_recents();
}
return this;
},
render_blocks:function (blocks,limit=25){
if (this.selected_stack!=null){
this.selected_stack=null;
}
const content=this.widget.content.content;
let added=0;
let first=true;
blocks.iterate((block)=>{
if (block.is_chapter===true||block.is_language===true){
return null;
}
const stack=VStack(
HStack(
Title(block.title||block.name)
.font_size(14)
.line_height(16)
.margin(0)
.padding(0)
.ellipsis_overflow(true),
(block.full_name!=(block.title||block.name)&&block.full_name!=null)
?[
Subtext("▶")
.white_space("pre")
.font_size(8)
.line_height(8)
.height(8)
.margin((14-8)/2,7.5,0,7.5)
.padding(0),
Subtext(block.full_name)
.white_space("pre")
.font_size(14)
.line_height(16)
.margin(0)
.padding(0),
]
:null,
(block.language==null||block.language==="NO_LANG")
?null
:[
Subtext("▶")
.white_space("pre")
.font_size(8)
.line_height(8)
.height(8)
.margin((14-8)/2,7.5,0,7.5)
.padding(0),
Subtext(block.language)
.font_size(14)
.line_height(16)
.margin(0)
.padding(0)
.color(THEME.tint_fg)
.on_theme_update((e)=>{
e.color(THEME.tint_fg);
}),
],
)
.center_vertical(),
block.description==null 
?null
:Subtext()
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE+2)
.min_height(PARAM_TEXT_FONT_SIZE+2)
.max_height(PARAM_TEXT_FONT_SIZE+2)
.inner_html(block.description)
.margin(0)
.padding(0)
.margin_top(7.5)
.ellipsis_overflow(true)
.wrap(false)
)
.border_radius(10)
.padding(10,7.5)
.on_click(()=>{
SEARCH_POPUP.close();
CONTENT.render(block)
})
.extend({
block:block,
select:function(){
if (SEARCH_POPUP.selected_stack!=null){
SEARCH_POPUP.selected_stack.background("none");
}
this.background("var(--widget_bg)")
SEARCH_POPUP.selected_stack=this;
}
})
if (first===true){
stack.select();
first=false;
}
content.append(stack)
++added;
if (added>=limit){
return false;
}
});
},
render_recents:function(){
this.widget.content.content.remove_children();
let recents=[];
let ids=[];
RECENTS.iterate((block)=>{
if (ids.includes(block.id)===false){
ids.push(block.id);
recents.push(block);
}
})
if (recents.length>0){
this.widget.content.content.append(
Span("Recents")
.margin(5,0,10,7.5)
.font_size(14)
.font_weight("bold")
)
this.render_blocks(recents);
}
},
search:function(query){
const input=this.widget.content.header.input;
const content=this.widget.content.content;
if (input.value()===""){ return this;}
const results=vweb.utils.fuzzy_search({
query:input.value(),
targets:BLOCKS,
limit:null,
case_match:false,
allow_exceeding_chars:false,
key:["name","title"],
nested_key:"children",
});
this.widget.content.header.image.show();
this.widget.content.header.loader.hide();
content.remove_children("");
if (results.length===0){
content.append(
Span("No results")
.margin(5,0,5,0)
.font_size(14)
.font_weight("bold")
)
return this;
}
this.render_blocks(results);
return this;
},
clear:function(){
this.widget.content.header.input.value("");
this.widget.content.header.clear.hide();
this.render_recents();
return this;
},
key_down_event:function (event){
switch (event.key){
case "Escape":
SEARCH_POPUP.close();
break;
case "ArrowDown":
if (SEARCH_POPUP.selected_stack!=null&&SEARCH_POPUP.selected_stack.nextElementSibling!=null){
SEARCH_POPUP.selected_stack.nextElementSibling.select();
}
break;
case "ArrowUp":
if (SEARCH_POPUP.selected_stack!=null&&SEARCH_POPUP.selected_stack.previousElementSibling!=null&&SEARCH_POPUP.selected_stack.previousElementSibling.element_type==="VStack"){
SEARCH_POPUP.selected_stack.previousElementSibling.select();
}
break;
case "Enter":
if (SEARCH_POPUP.selected_stack!==null){
SEARCH_POPUP.close();
CONTENT.render(SEARCH_POPUP.selected_stack.block);
}
break;
default:
break;
}
return this;
},
close:function(){
window.removeEventListener("keydown", this.key_down_event)
this.opacity(0)
setTimeout(()=>{
this.hide();
},200)
this.visible=false;
return this;
},
});
window.addEventListener("keydown",(event)=>{
if (event.key==="/"&&(event.metaKey||event.ctrlKey)){
SEARCH_POPUP.popup();
}
})
const TOPBAR=VStack(
HStack(
HEADLESS?null :ProjectIcon()
.height(30)
.margin_right(35),
HEADLESS?null :HStack(
ImageMask(SEARCH_IMG)
.frame(10,10)
.margin_right(10)
.mask_color("var(--fg)"),
Input("Search")
.font_size(14)
.margin(0)
.min_width("none")
.width("auto")
.stretch(true)
.pointer_events("none"),
Span("⌘/")
.font_size(10)
.line_height(10)
.padding(5)
.border_radius(5)
.border(1,"var(--divider_bg)")
)
.overflow("hidden")
.padding(5,10,5,10)
.border_radius(15)
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.center_vertical()
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.media(
"width >= 900px",
e=>e.show(),
e=>e.hide(),
)
.on_click(()=>{
SEARCH_POPUP.popup();
}),
Spacer(),
ImageMask(SEARCH_IMG)
.flex_shrink(0)
.frame(16,16)
.margin_right(20)
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>SEARCH_POPUP.popup())
.media(
"width < 900px",
e=>e.show(),
e=>e.hide(),
),
ImageMask(MOON_IMG)
.flex_shrink(0)
.frame(15,15)
.margin_right(20)
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>toggle_theme()),
ImageMask(MENU_IMG)
.flex_shrink(0)
.frame(15,15)
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>SIDEBAR.toggle()),
)
.padding(15,25)
.width("100%")
.border_bottom("1px solid var(--divider_bg)")
.center_vertical(),
HStack()
.assign_to_parent_as("navs")
.padding(15+2+3,25)
.width("fit-content")
.border_bottom("1px solid var(--divider_bg)")
.on_render((e)=>{
e.media(
`width >= ${e.clientWidth}px`,
(e)=>{
if (NAVIGATION_ENABLED===false){
NAVIGATION_ENABLED=true;
update_topbar_height(125);
SIDEBAR_CONTENT.render();
}
},
(e)=>{
if (NAVIGATION_ENABLED){
NAVIGATION_ENABLED=false;
update_topbar_height(65);
SIDEBAR_CONTENT.render();
}
},
)
})
.exec((e)=>{
const navs=[],nav_elements={};
BLOCKS.iterate((block)=>{
if (navs.includes(block.language)===false){
navs.append(block.language);
}
})
if (navs.length<=1){
navs=["Documentation"];
} else {
for (let i=0;i<navs.length;i++){
if (navs[i]==null||navs[i]=="NO_LANG"){
navs[i]="Documentation";
}
}
}
let i=0;
navs.iterate((item)=>{
if (i===0){
ACTIVE_NAVIGATION=item;
}
const stack=VStack(
Title(item)
.font_size(15)
.font_weight(i===0?600:400)
.color(i===0?"var(--title_fg)":"var(--sidebar_fg)")
.margin(0,0,2,0),
VStack()
.background(i===0?THEME.tint_fg:"transparent")
.on_theme_update((e)=>e.background(ACTIVE_NAVIGATION===item?THEME.tint_fg:"transparent"))
.height(2.5)
.border_radius(2)
.width("100%")
.flex_shrink(0)
)
.margin_right(20)
.on_mouse_over((e)=>{
if (e.child(0).font_weight()!=="600"){
e.child(0).color("var(--title_fg)")
e.child(1).background("var(--title_fg)")
}
})
.on_mouse_out((e)=>{
if (e.child(0).font_weight()!=="600"){
e.child(0).color("var(--sidebar_fg)")
e.child(1).background("transparent")
}
})
.on_click((e)=>{
navs.iterate((key)=>{
const element=nav_elements[key];
if (key===item){
element.disable();
element.child(0)
.font_weight(600)
.color("var(--title_fg)")
element.child(1)
.background(THEME.tint_fg)
} else {
element.enable();
element.child(0)
.font_weight(400)
.color("var(--sidebar_fg)")
element.child(1)
.background("transparent")
}
})
ACTIVE_NAVIGATION=item;
SIDEBAR_CONTENT.render();
});
nav_elements[item]=stack;
e.append(stack)
++i;
})
})
)
.overflow("hidden")
.position(0,0, null,0)
.height(TOPBAR_HEIGHT)
.on_update_topbar_height((e)=>e.height(TOPBAR_HEIGHT))
.border_bottom("1px solid var(--divider_bg)")
.background_blur(THEME.topbar_blur)
.background(THEME.topbar_bg)
.on_theme_update((e)=>{
e.background(THEME.topbar_bg)
e.background_blur(THEME.topbar_blur)
})
.z_index(100)
if (HEADLESS){
TOPBAR.hide();
}
const SIDEBAR_CONTENT=VStack()
.id("sidebar_content")
.frame("100%","100%")
.user_select("none")
.extend({
selected_items:[],
unselect_all:function(){
this.selected_items.iterate((item)=>{item.unselect();});
this.selected_items=[];
return this;
},
render:function(initial=false){
return new Promise((resolve,reject)=>{
const root_content=[];
const add_block=(parent,block,depth=0)=>{
if (NAVIGATION_ENABLED&&depth===0&&
!(
ACTIVE_NAVIGATION===block.language||
((block.language==="NO_LANG"||block.language===null)&&ACTIVE_NAVIGATION==="Documentation")
)
){
return null;
}
if (NAVIGATION_ENABLED&&block.is_language===true){
if (block.children!=null&&block.children.length>0){
block.children.iterate((child)=>add_block(parent,child,depth));
}
return null;
}
if (block.is_language===true&&block.name==="NO_LANG"){
if (block.children!=null&&block.children.length>0){
block.children.iterate((child)=>add_block(parent,child,depth));
}
return null;
}
if (block.is_chapter===true&&block.name==="NO_CHAPTER"){
if (block.children!=null&&block.children.length>0){
block.children.iterate((child)=>add_block(parent,child,depth));
}
return null;
}
let container,img,title,fold_arrow,children,content;
if (SIDEBAR_IMAGES[block.id]!=null){
img=ImageMask(SIDEBAR_IMAGES[block.id])
.fixed_frame(12.5,12.5)
.flex_shrink(0)
.margin_right(10)
.mask_color("var(--sidebar_fg)")
}
title=Text()
.font_size(15)
.line_height(17)
.font_weight(400)
.padding(0)
.margin(0)
.flex_shrink(0)
.wrap(false)
.text_overflow("ellipsis")
.overflow("hidden")
if (block.is_language){
title.text(block.name.toUpperCase())
title.color(THEME.tint_fg)
title.on_theme_update(()=>{
title.color(THEME.tint_fg);
})
title.font_weight(600)
} else if (block.is_chapter){
title.color("var(--sidebar_fg)")
title.text(block.name)
} else {
title.color("var(--sidebar_fg)")
title.text(block.title?block.title:block.name)
}
if (block.children!=null&&block.children.length>0){
children=VStack()
.display("none")
.stretch(true)
.extend({
select:(...args)=>container.select(...args),
unfold:(...args)=>container.unfold(...args),
});
const next_depth=block.is_language?depth:depth+1;
block.children.iterate((child)=>add_block(children,child,next_depth));
}
if (children!=null){
fold_arrow=ImageMask(ARROW_IMG)
.frame(15,15)
.padding(2.5)
.mask_color("var(--sidebar_fg)")
.margin_left(5)
.z_index(10)
.flex_shrink(0)
}
let content_horizontal_padding=12.5;
let vertical_dividers=[];
let selected_dot;
for (let i=0;i<depth;i++){
if (i===depth-1){
selected_dot=VStack()
.hide()
.flex_shrink(0)
.background("var(--tint_fg)")
.frame(5,5)
.border_radius("50%")
.position("calc(50% - 2.5px)", null, null,`-${5/2-1}px`)
}
vertical_dividers.push(
VStack(
VStack()
.background("var(--divider_bg)")
.width(1)
.min_width(1)
.max_width(1)
.margin_top(-1)
.min_height("calc(100% + 2px)"),
selected_dot,
)
.flex_shrink(0)
.overflow("visible")
.position("relative")
.height("100%")
.margin_right(content_horizontal_padding)
);
}
content=HStack(
...vertical_dividers,
HStack(
img,
title,
Spacer(),
fold_arrow,
)
.padding(content_horizontal_padding,content_horizontal_padding,content_horizontal_padding,0)
.stretch(true)
.center_vertical()
)
.align_items("stretch")
.height(35)
.center_vertical()
.padding(0,5,0,content_horizontal_padding)
.margin(0)
.border_radius(7)
.border(1,"transparent")
.on_mouse_over(()=>{
if (container.selected!==true&&block.is_language!==true){
content.mouse_over=true;
title.color("var(--hover_fg)");
if (selected_dot!=null){
selected_dot.background("var(--sidebar_fg)")
selected_dot.show();
}
if (img!=null){
img.mask_color("var(--hover_fg)")
}
}
})
.on_mouse_out(()=>{
if (content.mouse_over===true&&container.selected!==true&&block.is_language!==true){
title.color("var(--sidebar_fg)");
if (selected_dot!=null){
selected_dot.hide();
selected_dot.background("var(--tint_fg)")
}
if (img!=null){
img.mask_color("var(--sidebar_fg)")
}
}
})
.on_click(()=>{
if (container.folded||container.selected===false){
CONTENT.render(block)
} else {
container.fold(true);
}
})
const _this_=this;
container=VStack(
content,
children,
)
.width("100%")
.extend({
block,
foldable:children!=null,
selected:(block.is_language===true||block.is_chapter===true)?null :false,
select:function(background=true){
if (block.is_language===true||block.is_chapter===true){
return this;
}
if (background){
content.background("var(--selected_bg)");
content.border(1,"var(--divider_bg)")
}
title.font_weight(500);
title.color(THEME.tint_fg);
title.on_theme_update(()=>{
title.color(THEME.tint_fg);
});
SIDEBAR_CONTENT.selected_items.push(this);
if (selected_dot!=null){
selected_dot.background("var(--tint_fg)")
selected_dot.show();
}
if (img!=null){
img.mask_color(THEME.tint_fg);
img.on_theme_update(()=>{
img.mask_color(THEME.tint_fg);
});
}
this.selected=true;
return this;
},
unselect:function(){
this.selected=false;
content.background("none");
content.border(1,"transparent");
if (block.is_language!==true){
title.font_weight(400);
title.color("var(--sidebar_fg)");
title.remove_on_theme_updates()
}
if (selected_dot!=null){
selected_dot.hide();
}
if (img!=null){
img.mask_color("var(--sidebar_fg)");
}
return this;
},
folded:true,
fold:()=>{},
unfold:(forced=false)=>{
if (parent.unfold!==undefined){
parent.unfold(forced);
}
},
fold:()=>{},
})
if (children!=null){
container.extend({
fold_arrow:fold_arrow,
folded:true,
fold:function(forced=false){
this.folded=true;
children.display("none");
fold_arrow.transform("rotate(0deg)");
return this;
},
unfold:function(forced=false){
this.folded=false;
children.display("block");
fold_arrow.transform("rotate(90deg)");
if (parent.unfold!==undefined){
parent.unfold(forced);
}
return this;
},
toggle_folded:function(){
if (this.folded){ return this.unfold(true);}
else { return this.fold(true);}
},
})
}
if (depth===0){
root_content.append(container);
}
SIDEBAR_ELEMENTS[block.id]=container;
parent.append(container);
}
this.remove_children();
BLOCKS.iterate((block)=>add_block(this,block));
if (root_content.length===1&&root_content[0].foldable){
root_content[0].unfold();
}
let block=null;
let block_id;
if (initial){
if (block==null&&(block_id=vweb.utils.url_param("id"))!=null){
block=get_block_by_id(block_id);
}
if (block==null&&(block_id=localStorage.getItem("libris_id"))!=null){
block=get_block_by_id(block_id);
}
}
if (block==null&&root_content.length>0){
block=root_content[0].block;
}
if (block!=null){
CONTENT.render(block);
}
resolve();
});
}
});
const SIDEBAR=Scroller(
HEADLESS?null :ProjectIcon()
.assign_to_parent_as("icon")
.hide()
.width("fit-content", false)
.height(30)
.flex(0)
.min_height(30)
.margin(25,0,10,10),
!HEADLESS?null :HStack(
ImageMask(SEARCH_IMG)
.flex_shrink(0)
.frame(16,16)
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>SEARCH_POPUP.popup()),
ImageMask(MOON_IMG)
.flex_shrink(0)
.frame(15,15)
.margin_left(SPACING)
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>toggle_theme()),
)
.center_vertical()
.width("100%"),
SIDEBAR_CONTENT,
)
.position("relative")
.overflow("hidden")
.height("100%")
.width("100%")
.min_width(280)
.max_width(320)
.background("var(--sidebar_bg)")
.border_right(`1px solid ${FULL_SCREEN?"var(--divider_bg)":"transparent"}`)
.transform("translateX(0px)")
.transition("max-width 0.3s ease-in-out, min-width 0.3s ease-in-out, transform 0.3s ease-in-out")
.flex(1)
.content
.display("block")
.width("100%")
.overflow_x("hidden")
.scroll_behavior("smooth")
.parent()
.extend({
is_desktop:true,
is_visible:null,
darkener:null,
set_padding(){
if (this.is_desktop===true){
this.content.padding(TOPBAR_HEIGHT+15,15,SPACING,15)
this.content.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+15))
} else {
this.content.padding(SPACING,15)
this.content.on_update_topbar_height((e)=>e.padding_top(SPACING))
}
},
set_desktop:function(to){
if (to===true&&this.is_desktop===false){
this.is_desktop=true;
this.position("relative")
this.z_index("")
this.max_width(320);
this.set_padding();
if (this.content.icon!=null){
this.content.icon.hide();
}
this.transform("translateX(0px)");
} else if (to===false&&this.is_desktop===true){
this.is_desktop=false;
this.position(0, null,0,0)
this.max_width(300);
this.z_index(102)
this.set_padding();
if (this.content.icon!=null){
this.content.icon.show();
}
}
},
toggle:function(to=null,animate=true){
if (to==null){
to=!this.is_visible;
}
if (to===this.visible){
return this;
}
if (animate===false){
this.transition("");
}
if (to===false){
this.is_visible=false;
if (this.darkener!==null){
this.darkener.opacity(0)
setTimeout(()=>this.darkener.hide(),300)
}
if (this.is_desktop){
this.min_width(0);
this.max_width(0);
} else {
this.transform(`translateX(-${this.clientWidth}px)`);
}
}
else if (to===true){
this.is_visible=true;
if (this.is_desktop){
this.min_width(280);
this.max_width(this.is_desktop?320:300);
} else {
if (this.darkener===null){
this.darkener=VStack()
.position(0,0,0,0)
.z_index(101)
.background("#42424210")
.background_blur(5)
.opacity(0)
.transition("opacity 300ms ease")
.on_click(()=>{
this.minimize();
})
this.parentElement.insertBefore(this.darkener, this);
}
this.darkener.show();
this.darkener.getBoundingClientRect();
this.darkener.opacity(1);
this.transform("translateX(0px)");
}
}
if (animate===false){
setTimeout(()=>{
this.transition("max-width 0.3s ease-in-out, min-width 0.3s ease-in-out, transform 0.3s ease-in-out")
},300)
}
},
minimize:function (animate=true){ this.toggle(false,animate);},
maximize:function (animate=true){ this.toggle(true,animate);},
});
if (vweb.utils.device_width()<MIN_SIDEBAR_WIDTH){
SIDEBAR.set_padding();
SIDEBAR.set_desktop(false);
SIDEBAR.minimize(false);
} else {
SIDEBAR.set_padding();
SIDEBAR.set_desktop(true);
SIDEBAR.maximize(false);
}
CONTENT=VStack()
.width("100%")
.max_width(1100)
.overflow("visible")
.extend({
rendered_block:null,
analytics_prev_id:null,
analytics_prev_timestamp:null,
render:function(block,add_hist=true,recursive=false,reset=true){
let loader,fragment;
let add_titles_to_minimap=false;
const get_first_code_block=(block)=>{
if (block.is_language!==true&&block.is_chapter!==true){
return block;
} else if (block.children!=null&&block.children.length>0){
return block.children.iterate((child)=>{
return get_first_code_block(child);
});
}
return null;
}
const render_expandable_info=({
title="Values",
list=[],
default_type=null,
parent_widgets=[],
attributes_type=null,
})=>{
let stack,minimized,maximized;
const opacity_duration=100;
const height_duration=400;
minimized=HStack(
Span(title)
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE+2)
.color("var(--fg)"),
ImageMask(PLUS_IMG)
.frame(10,10)
.margin(1.5,0,0,5)
.mask_color("var(--fg)")
.flex_shrink(0)
)
.max_height("auto")
.opacity(1)
.transition(`opacity ${opacity_duration}ms ease-in-out`)
.center_vertical()
.on_click(()=>stack.maximize())
maximized=VStack(
VStack(
ImageMask(CLOSE_IMG)
.frame(10,10)
.position(18.5,18.5, null, null)
.margin(1.5,0,0,5)
.mask_color("var(--fg)")
.flex_shrink(0)
.on_click(()=>stack.minimize()),
)
.frame("100%","100%")
.padding(15,20)
.assign_to_parent_as("content")
)
.position("relative")
.overflow("hidden")
.max_height(0)
.opacity(0)
.border_radius(10)
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.shadow("0px 0px 5px #00000005")
.transition(`max-height ${height_duration}ms ease-in-out, opacity ${opacity_duration}ms ease-in-out`)
stack=VStack(
minimized,
maximized,
)
.margin(5,0,0,0)
.width("100%")
.extend({
minimized:minimized,
maximized:maximized,
maximized_height:null,
additional_height:0,
minimize:function(){
parent_widgets.iterate((widget)=>{
widget.add_additional_height(-this.maximized_height);
})
if (parent_widgets.length>0){
parent_widgets.last().maximized.background("var(--widget_bg)");
parent_widgets.last().maximized.shadow("0px 0px 5px #00000005")
}
maximized.max_height(0)
setTimeout(()=>{
maximized.margin_bottom(0)
maximized.margin_top(0)
},height_duration);
setTimeout(()=>{
minimized.show();
setTimeout(()=>minimized.opacity(1),50)
},height_duration-opacity_duration-25);
setTimeout(()=>{
maximized.opacity(0)
},height_duration-opacity_duration-100);
},
maximize:function(){
maximized.margin_top(5)
maximized.margin_bottom(5)
if (this.maximized_height==null){
maximized.transition("none");
maximized.max_height("none");
maximized.visibility("hidden");
this.maximized_height=maximized.getBoundingClientRect().height;
maximized.max_height(0);
maximized.visibility("visible");
maximized.transition(`max-height ${height_duration}ms ease-in-out, opacity ${opacity_duration}ms ease-in-out`);
setTimeout(()=>this.maximize(),25);
return null;
}
parent_widgets.iterate((widget)=>{
widget.add_additional_height(this.maximized_height);
widget.maximized.background("none");
widget.maximized.shadow("none");
})
maximized.background("var(--widget_bg)");
maximized.shadow("0px 0px 5px #00000005")
minimized.opacity(0)
setTimeout(()=>minimized.hide(),opacity_duration)
maximized.opacity(1)
maximized.max_height(this.maximized_height)
},
add_additional_height(height){
this.additional_height=Math.max(0, this.additional_height+height);
maximized.max_height(this.maximized_height+this.additional_height);
}
});
const parent_widgets_copy=[];
parent_widgets.iterate((item)=>{parent_widgets_copy.push(item)});
parent_widgets_copy.push(stack);
maximized.content.append(
render_params_enums_style_list({
list:list,
nested:true,
default_type:default_type,
attributes_type:attributes_type,
parent_widgets_copy:parent_widgets_copy,
})
);
return stack;
}
const render_params_enums_style_list=({
list,
title=null,
nested=false,
default_type=null,
attributes_type=null,
parent_widgets_copy=[],
top_divider=false,
})=>{
let stack=[];
if (list!=null&&list.length>0){
if (title!=null){
stack.append(
Subtitle(title),
Divider()
.margin_bottom(SPACING*0.5),
);
} else if (attributes_type!=null){
stack.append(
Subtitle(attributes_type)
.font_size(PARAM_TEXT_FONT_SIZE)
.font_family("var(--code_font)")
.margin(0),
Divider()
.margin(SPACING*0.5,0,SPACING*0.5,0),
);
} else if (top_divider){
stack.append(
Divider()
.margin(SPACING*0.5,0,SPACING*0.5,0)
)
}
let i=-1;max_i=list.length-1;
list.iterate((param)=>{
++i;
if (param.ignore===true){ return null;}
let type=null,name=null,description=null,def=null,required=null;
name=Span()
.inner_html(param.name!=null?param.name:param.value)
.font_size(PARAM_NAME_FONT_SIZE)
.line_height(PARAM_NAME_FONT_SIZE+2)
.flex_shrink(0)
.ellipsis_overflow(true)
const l_type=param.type==null?default_type:param.type;
if (l_type!=null&&l_type.length>0){
type=Span()
.inner_html(param.type!=null?param.type:default_type)
.font_size(PARAM_TYPE_FONT_SIZE)
.line_height(PARAM_TYPE_FONT_SIZE+2)
.margin_left(10)
.ellipsis_overflow(true)
if (nested===false){
type
.background("var(--codeline_bg)")
.color("var(--codeline_fg)")
.padding(2.5,4)
.border_radius(5)
.wrap(false)
}
}
let def_defined=false;
if (param.def!=null&&param.def.length>0){
def_defined=true;
def=Span()
.inner_html(param.def)
.font_size(PARAM_TYPE_FONT_SIZE)
.line_height(PARAM_TYPE_FONT_SIZE+2)
.white_space("pre")
.margin_left(10)
.padding(2.5,4)
.border_radius(5)
.ellipsis_overflow(true)
if (nested===false){
def
.background("var(--codeline_bg)")
.color("var(--codeline_fg)")
}
}
if (
param.required===true||
(param.required!==false&&def_defined===false&&(param.block_type==="parameter"||param.block_type==="template"))
){
required=Tag("Required","tag_required")
} else if (param.conditionally_required===true){
required=Tag("Conditionally Required","tag_required")
} else if (param.advised===true){
required=Tag("Advised","tag_advised")
}
if (required){
required
.flex_shrink(1)
.ellipsis_overflow(true)
.margin(
nested?0:-3,
(attributes_type==null&&nested&&i===0)?20:0,
0,
10,
)
.font_size(11)
.padding(4,7.5)
}
let tags=[];
if (param.experimental===true){
tags.push(
Tag("Experimental","tag_experimental")
.flex_shrink(1)
.ellipsis_overflow(true)
.margin(
nested?0:-3,
(attributes_type==null&&nested&&i===0)?20:0,
0,
10,
)
.font_size(11)
.padding(2,7.5)
);
}
if (param.deprecated===true){
tags.push(
Tag("Deprecated","tag_deprecated")
.flex_shrink(1)
.ellipsis_overflow(true)
.margin(
nested?0:-3,
(attributes_type==null&&nested&&i===0)?20:0,
0,
10,
)
.font_size(11)
.padding(2,7.5)
);
}
stack.append(
HStack(
HStack(
name,
type,
def,
)
.font_family("var(--code_font)")
.overflow_x("hidden")
.stretch(true)
.height(nested?"auto":20)
.center_vertical(),
...tags,
required,
)
.font_size(PARAM_NAME_FONT_SIZE)
.white_space("pre")
.overflow_y("visible")
.text_overflow("ellipsis")
.wrap(false)
.color("var(--title_fg)")
.center_vertical(),
)
const expandable_items=[];
if (param.description!=null){
description=Subtext()
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE*1.4)
.margin(5,0,0,0)
.inner_html(param.description)
expandable_items.append(description);
}
const has_warnings=param.warnings!=null&&param.warnings.length>0;
if (param.notes!=null&&param.notes.length>0){
let i=0,max_i=param.notes.length-1;
param.notes.iterate((warning)=>{
expandable_items.append(
Note(warning)
.padding(10,20)
.font_size(PARAM_TEXT_FONT_SIZE-1)
.margin(i===0?7.5:0,0,i<max_i?7.5:(has_warnings?7.5:5),0),
);
++i;
});
}
if (has_warnings){
let i=0,max_i=param.warnings.length-1;
param.warnings.iterate((warning)=>{
expandable_items.append(
Warning(warning)
.padding(10,20)
.font_size(PARAM_TEXT_FONT_SIZE-1)
.margin(i===0?7.5:0,0,i<list.length-1?7.5:5,0),
);
++i;
});
}
if (param.parameters!=null){
expandable_items.append(
render_expandable_info({
title:"Parameters",
list:param.parameters,
parent_widgets:parent_widgets_copy,
})
);
}
else if (param.enumerates!=null){
expandable_items.append(
render_expandable_info({
title:"Values",
list:param.enumerates,
default_type:param.type||default_type,
parent_widgets:parent_widgets_copy,
})
);
}
else if (param.attributes!=null){
expandable_items.append(
render_expandable_info({
title:"Attributes",
list:param.attributes,
attributes_type:param.attributes_type,
parent_widgets:parent_widgets_copy,
})
);
}
if (nested===false&&expandable_items.length>0&&param.description!=null&&param.description.indexOf("\n")!==-1){
if ((param.description!=null&&param.description.indexOf("\n")!==-1)){
let found_line_break=false,before_break=[],after_break=[];
for (let i=0;i<description.childNodes.length;i++){
const child=description.childNodes[i];
if (found_line_break){
after_break.push(child);
} else {
const index=child.textContent.indexOf("\n");
if (index!==-1){
if (child.nodeType===Node.TEXT_NODE){
before_break.push(document.createTextNode(child.textContent.substr(0,index)));
after_break.push(document.createTextNode(child.textContent.substr(index+1)));
} else {
before_break.push(child);
}
found_line_break=true;
} else {
before_break.push(child);
}
}
}
if (found_line_break){
const small_description=Subtext()
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE*1.4)
.margin(5,0,0,0)
before_break.iterate((node)=>{small_description.appendChild(node);})
stack.append(small_description)
description.margin_top(0);
description.inner_html("");
after_break.iterate((node)=>{description.appendChild(node);})
}
}
let expanded;
const expand=HStack(
Span("Expand")
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE+2)
.color("var(--fg)"),
ImageMask(PLUS_IMG)
.frame(10,10)
.margin(1.5,0,0,5)
.mask_color("var(--fg)")
.flex_shrink(0)
)
.opacity(1)
.transition(`opacity 1000ms ease`)
.margin_top(5)
.center_vertical()
.on_click(()=>{
expand.opacity(0)
expand.remove();
if (expanded===undefined){
expanded=VStack();
expandable_items.iterate((item)=>{
expanded.append(item);
})
expanded.append(minimize);
}
expandable.append(expanded);
expanded.overflow_y("scroll");
expandable.max_height(expanded.scrollHeight);
expanded.overflow_y("hidden")
setTimeout(()=>{
expandable.max_height("");
expanded.overflow_y("visible")
},300)
})
const minimize=HStack(
Span("Minimize")
.font_size(PARAM_TEXT_FONT_SIZE)
.line_height(PARAM_TEXT_FONT_SIZE+2)
.color(THEME.tint_fg)
.on_theme_update((e)=>{
e.color(THEME.tint_fg);
}),
ImageMask(MINUS_IMG)
.frame(10,10)
.margin(1.5,0,0,5)
.mask_color(THEME.tint_fg)
.on_theme_update((e)=>{
e.mask_color(THEME.tint_fg);
})
.flex_shrink(0)
)
.margin_top(5)
.center_vertical()
.on_click((e)=>{
expanded.overflow_y("hidden");
expandable.max_height(expanded.clientHeight);
expandable.getBoundingClientRect();
expandable.max_height(PARAM_TEXT_FONT_SIZE+5);
setTimeout(()=>{
expandable.insertBefore(expand,expanded);
expand.getBoundingClientRect();
expand.opacity(1)
expanded.remove();
},300-50)
})
const expandable=VStack(expand)
.width("100%")
.max_height(PARAM_TEXT_FONT_SIZE+5)
.transition(`max-height 300ms ease-in-out`)
stack.append(expandable)
}
else {
stack.append(expandable_items);
}
if (i!==list.length-1){
stack.append(
Divider()
.margin(SPACING*0.5,0,SPACING*0.5,0)
)
}
});
if (add_titles_to_minimap&&title!=null&&nested===false){
PAGE_SECTION_ELEMENTS[title]=stack[0];
}
}
return stack;
};
if (recursive===false){
if (this.analytics_prev_id!==null){
ANALYTICS.add_duration(this.analytics_prev_id,Date.now()-this.analytics_prev_timestamp);
}
ANALYTICS.add_view(block.id)
}
if (add_hist){
add_history(block)
}
if (recursive===false){
block=get_first_code_block(block);
}
if (block==null){ return null;}
if (recursive===false){
PAGE_SECTION_ELEMENTS={};
}
if (recursive===false){
SIDEBAR_CONTENT.unselect_all();
}
if (recursive===false&&SIDEBAR_ELEMENTS[block.id]!=null){
SIDEBAR_ELEMENTS[block.id].select();
SIDEBAR_ELEMENTS[block.id].unfold();
}
setTimeout(()=>CONTENT_SCROLLER.scroll_top(0),10);
if (reset){
this.remove_children();
}
if (recursive===false){
loader=VStack(
RingLoader()
.background("var(--title_fg)")
.frame(40,40)
.update()
)
.position(0,0,0,0)
.center()
.center_vertical()
this.append(loader);
}
fragment=VStack()
.font_size(SUBTITLE_TEXT_FONT_SIZE)
.tab_size(THEME.tab_size)
.overflow_x("hidden")
let has_chapter=false;
if (block.chapter!=null&&block.chapter!=="NO_CHAPTER"){
has_chapter=true;
fragment.append(
Title(block.chapter)
.display("inline-block")
.width("fit-content")
.margin(SPACING*2,0,0,0)
.color(THEME.tint_fg)
.on_theme_update((e)=>{
e.color(THEME.tint_fg);
})
.font_size(14)
);
} else {
fragment.append(VStack().min_frame(1,SPACING*2));
}
if (block.is_custom===true){
let block_index=0;
let prev_child=null;
let font_size=TITLE_TEXT_FONT_SIZE;
block.blocks.iterate((child)=>{
const apply_parameters=(element)=>{
const params=child.parameters;
if (params!=null){
Object.keys(params).iterate((key)=>{
try {
if (params[key].type==="tuple"){
element[key](...params[key].value);
} else {
element[key](params[key].value);
}
} catch (error){
throw new Error(`Encoutered an error while applying parameter "${key}" with value "${params[key].value}", to the "${child.type}" custom block from markdown page ${block.path}: ${error.message}.`);
}
})
}
return element;
}
switch (child.type){
case "HHLineBreak":
fragment.append(
Span()
.min_height(2.5)
.min_width("100%")
.display("block")
);
break;
case "HLineBreak":
fragment.append(
Span()
.min_height(5)
.min_width("100%")
.display("block")
);
break;
case "LineBreak":
fragment.append(
Span()
.min_height(10)
.min_width("100%")
.display("block")
);
break;
case "Divider":
fragment.append(
Divider()
.margin(10,0,0,0)
.exec((element)=>apply_parameters(element))
);
break;
case "Text":
if (child.data.length===0){
fragment.append(
Span()
.min_height(10)
.min_width("100%")
.display("block")
);
} else {
fragment.append(
Text()
.font_size(font_size)
.inner_html(
child.data
.replaceAll("\n\n","\n<span style='height: 10px; width: 100%; display: block'></span>")
.replaceAll("\n<br>","\n<span style='height: 10px; width: 100%; display: block'></span>")
)
.margin(SPACING*0.5,0,0,0),
);
}
break;
case "Title":
if (child.level<=1){
font_size=TITLE_TEXT_FONT_SIZE;
if (block_index>0){
fragment.append(
Divider()
.margin(SPACING*2,0,SPACING*0.5,0)
)
}
const title=Title(child.data)
.id(child.data)
.margin(block_index===0?10:SPACING*2,0,0,0);
if (block_index===0){
title.id(block.id);
}
PAGE_SECTION_ELEMENTS[child.data]=title;
fragment.append(title);
}
else {
font_size=SUBTITLE_TEXT_FONT_SIZE;
const subtitle=Subtitle(child.data)
.font_size(Math.max(1,(24+1.5)-(child.level*1.5)))
.margin_top(child.level<=2?SPACING*2:SPACING)
.margin_bottom(10);
if (child.level===2){
subtitle.id(child.data)
PAGE_SECTION_ELEMENTS[child.data]=subtitle;
}
fragment.append(
subtitle,
Divider()
.margin(0),
);
}
break;
case "HTMLTitle":{
const title=Title(child.data)
.id(child.data)
.margin(block_index===0?10:SPACING,0,0,0)
.exec((element)=>apply_parameters(element))
if (block_index===0){
title.id(block.id);
}
PAGE_SECTION_ELEMENTS[child.data]=title;
fragment.append(title);
break;
}
case "HTMLSubtitle":{
const title=Subtitle(child.data)
.id(child.data)
.margin(SPACING,0,0,0)
.exec((element)=>apply_parameters(element))
if (parseFloat(title.font_size())>=24){
title.margin_top(SPACING*2)
title.id(block.id);
PAGE_SECTION_ELEMENTS[child.data]=title;
}
fragment.append(title);
break;
}
case "List":
fragment.append(
Text()
.inner_html(child.data.join("<br>"))
.font_size(font_size)
.margin(0)
.tab_size(THEME.tab_size)
);
break;
case "Image":
fragment.append(
Image(child.source)
.margin(SPACING*0.5,0,0,0)
.alt(child.data)
);
break;
case "CodeBlock":
fragment.append(
CodeBlock()
.border(1,"var(--divider_bg)")
.inner_html(child.data)
.padding(15,20)
.margin(SPACING*0.5,0,0,0)
);
break;
case "HTML":
fragment.append(
VStack()
.width("100%")
.inner_html(child.data)
);
break;
case "JS":
try {
fragment.append(
eval(`()=>{${child.data}}`),
);
} catch (error){
throw new Error(`Encoutered an error while evaluating js code from markdown page ${block.path}: ${error.message}.\nJS code: ${child.data}`);
}
break;
case "Warning":
fragment.append(
Warning(child.data)
.margin(
(prev_child===null||(prev_child.type!=="Warning"&&prev_child.type!=="Note"))?SPACING*0.5:5,
0,
0,
0
)
.exec((element)=>apply_parameters(element))
);
break;
case "Note":
fragment.append(
Note(child.data)
.margin(
(prev_child===null||(prev_child.type!=="Warning"&&prev_child.type!=="Note"))?SPACING*0.5:5,
0,
0,
0
)
.exec((element)=>apply_parameters(element))
);
break;
case "SuggestedPage":{
const next=block.blocks[block_index+1];
if (next==null||next.type!=="SuggestedPage"){
const stack=HStack()
.width("100%")
.margin_top(25)
.wrap(true)
.align_height();
const items=[];
let margin_top;
for (let i=block_index;i>=0;i--){
const child=block.blocks[i];
if (child.type==="SuggestedPage"){
const sug_page=SuggestedPage(
child.parameters.image==null?null :child.parameters.image.value,
child.parameters.title==null?null :child.parameters.title.value,
child.parameters.description==null?null :child.parameters.description.value,
child.parameters.links==null?null :child.parameters.links.value
)
sug_page.links=[];
if (child.parameters.links!=null&&Array.isArray(child.parameters.links.value)){
sug_page.links=child.parameters.links.value;
}
items.push(sug_page);
if (child.parameters.margin_top!=null){
margin_top=child.parameters.margin_top.value;
}
}
}
items.iterate_reversed((item)=>{
stack.append(item);
})
if (margin_top!=null){
stack.margin_top(margin_top)
}
stack.media(
"width >= 700px",
(e)=>stack.side_by_side({columns:2,hspacing:10,vspacing:10}),
(e)=>stack.side_by_side({columns:1,hspacing:10,vspacing:10}),
);
if (items.length===1&&items[0].links!=null&&items[0].links.length>4){
items[0].maximize();
}
fragment.append(stack);
}
break;
}
case "Docs":
if (child.parameters!=null){
fragment.append(render_params_enums_style_list({list:child.parameters}));
}
if (child.templates!=null){
fragment.append(render_params_enums_style_list({list:child.templates}));
}
if (child.attributes!=null){
fragment.append(render_params_enums_style_list({list:child.attributes,attributes_type:child.attributes_type}));
}
if (child.enumerates!=null){
fragment.append(render_params_enums_style_list({list:child.enumerates}));
}
break;
default:
console.error(`Unknown custom block type: "${child.type}" from block ${JSON.stringify(child, null,4)}.`)
break;
}
++block_index;
prev_child=child;
});
}
else {
add_titles_to_minimap=block.children==null&&recursive===false;
const tags=HStack();
if (block.tags!=null){
Object.keys(block.tags).iterate((text)=>{
tags.append(
Tag(text,block.tags[text])
.margin(0,7.5,0,0)
);
})
}
const title=(recursive?ChildTitle(block.title):Title(block.title))
.id(block.id)
.margin(0)
.stretch(true)
fragment.append(
HStack(
title,
tags,
)
.margin(10,0,SPACING*0.5,0)
.center_vertical()
);
PAGE_SECTION_ELEMENTS[block.title]=title;
if (block.is_object!==true&&(recursive!==false||block.children==null)){
if (block.is_rest_api===true){
fragment.append(
HStack(
Span()
.font_family("var(--code_font)")
.color(get_restapi_method_color(block.method))
.font_size(16)
.inner_html(block.method)
.margin_bottom(SPACING),
Span()
.font_family("var(--code_font)")
.color("var(--title_fg)")
.font_size(16)
.inner_html(" "+block.endpoint)
.white_space("pre")
.margin_bottom(SPACING)
),
);
}
else if (block.full_name_type!=null){
fragment.append(
Span()
.font_family("var(--code_font)")
.font_size(16)
.inner_html(block.full_name_type)
.margin_bottom(SPACING)
);
}
}
if (block.description!=null){
fragment.append(
Text(block.description)
.id("title_description")
.font_size(TITLE_TEXT_FONT_SIZE)
.margin(0,0,SPACING*0.5,0)
);
}
const has_warnings=block.warnings!=null&&block.warnings.length>0;
if (block.notes!=null&&block.notes.length>0){
let i=0,max_i=block.notes.length-1;
block.notes.iterate((item)=>{
fragment.append(
Note(item)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:(has_warnings?5:SPACING*0.8),0),
);
++i;
});
}
if (has_warnings){
let i=0,max_i=block.warnings.length-1;
block.warnings.iterate((item)=>{
fragment.append(
Warning(item)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:SPACING*0.8,0),
);
++i;
});
}
if (block.reference!=null){
fragment.append(
CodeBlock()
.white_space("pre")
.inner_html(block.reference)
.border(1,"var(--divider_bg)")
.margin(0,0,0,0)
.padding(15,20)
)
}
if (block.is_rest_api){
fragment.append(render_params_enums_style_list({list:block.headers,title:"Headers"}));
}
fragment.append(render_params_enums_style_list({list:block.attributes,title:"Attributes"}));
fragment.append(render_params_enums_style_list({list:block.templates,title:"Templates"}));
fragment.append(render_params_enums_style_list({list:block.path_parameters,title:"Path Parameters"}));
if (block.is_rest_api){
if (block.method==="GET"){
fragment.append(render_params_enums_style_list({list:block.parameters,title:"Query Parameters"}));
} else {
fragment.append(render_params_enums_style_list({list:block.parameters,title:"Body Parameters"}));
}
} else {
fragment.append(render_params_enums_style_list({list:block.parameters,title:"Parameters"}));
}
if (block.notes!=null){
const title=Subtitle("Notes")
if (add_titles_to_minimap){
PAGE_SECTION_ELEMENTS["Notes"]=title;
}
fragment.append(
title,
Divider()
.margin_bottom(SPACING*0.5),
Subtext()
.font_size(SUBTITLE_TEXT_FONT_SIZE)
.inner_html(block.notes),
);
}
const all_code_lang_headers=[];
const render_code_per_language=(code_title="Usage",code)=>{
if (code==null){
return null;
}
if (typeof code==="string"){
return CodeBlock()
.border(1,"var(--divider_bg)")
.margin(SPACING/2,0,SPACING,0)
.inner_html(code)
.padding(15,20)
}
else if (typeof code==="object"){
const code_pres={};
const langs=Object.keys(code).drop("block_type");
let header,block;
const opacity_duration=100;
const height_duration=400;
const lang_font_size=10;
header=HStack(
Span("")
.font_size(12)
.line_height(12+2)
.font_weight("bold")
.assign_to_parent_as("title")
.wrap(false)
.overflow("hidden")
.text_overflow("ellipsis"),
ImageMask(COPY_IMG)
.frame(15,15)
.flex_shrink(0)
.margin(null, null, null,10)
.mask_color("var(--codeblock_fg)")
.transform("rotate(90deg)")
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.on_click(async ()=>{
vweb.utils.copy_to_clipboard(code_pres[header.selected].textContent)
.then(()=>{
RESPONSE_STATUS.success("Copied to clipboard");
})
.catch((error)=>{
console.error(error);
RESPONSE_STATUS.error("Failed to the code to the clipboard");
})
}),
VStack(
HStack(
Span()
.margin_right(10)
.font_size(lang_font_size)
.line_height(lang_font_size+2)
.assign_to_parent_as("value"),
ImageMask(ARROW_IMG)
.frame(10,10)
.flex_shrink(0)
.mask_color("var(--codeblock_fg)")
.transform("rotate(90deg)"),
)
.opacity(1)
.center_vertical()
.transition(`opacity ${opacity_duration}ms ease-in-out`)
.center()
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.on_click(()=>header.popup())
.assign_to_parent_as("minimized"),
VStack()
.opacity(0)
.max_height(lang_font_size)
.max_width("none")
.width("100%")
.center()
.overflow("hidden")
.transition(`max-height ${height_duration}ms ease-in-out, max-width ${height_duration}ms ease-in-out, opacity ${opacity_duration}ms ease-in-out`)
.assign_to_parent_as("maximized"),
)
.position(7.5,7.5, null, null)
.center_vertical()
.padding(7.5,10)
.border_radius(15)
.border(1,"var(--divider_bg)")
.background("var(--codeblock_bg)")
.z_index(2)
.transition(`min-width ${height_duration}ms ease-in-out`)
.assign_to_parent_as("content")
)
.height(42.5)
.padding(7.5,15)
.center_vertical()
.z_index(2)
.extend({
selected:null,
set_selected:function(val){
const minimized=this.content.minimized;
const maximized=this.content.maximized;
minimized.value.text(val);
this.title.text(`${val} ${code_title}`)
this.selected=val;
if (maximized.max_width()==="none"){
const width_measurer=document.createElement("canvas").getContext("2d");
width_measurer.font=window.getComputedStyle(minimized.value).font;
const initial_width=width_measurer.measureText(this.selected).width;
maximized.max_width(initial_width+10+10+7.5*2);
}
},
close_handler:function(event){
header.close_popup();
},
close_popup:function(){
const minimized=this.content.minimized;
const maximized=this.content.maximized;
const width_measurer=document.createElement("canvas").getContext("2d");
width_measurer.font=window.getComputedStyle(minimized.value).font;
const width=width_measurer.measureText(minimized.value.textContent).width;
maximized.max_height(lang_font_size);
maximized.max_width(width+10+10);
setTimeout(()=>{
minimized.show()
setTimeout(()=>{
this.content.min_width(0)
minimized.opacity(1)
},25);
},height_duration-opacity_duration-25+125)
setTimeout(()=>{
maximized.opacity(0)
},height_duration-opacity_duration-200)
setTimeout(()=>{
maximized.inner_html("");
},height_duration)
window.removeEventListener("mousedown", this.close_handler);
ACTIVE_LANG_POPUP=null;
},
popup:function(){
const minimized=this.content.minimized;
const maximized=this.content.maximized;
if (ACTIVE_LANG_POPUP===this){
return null;
}
if (ACTIVE_LANG_POPUP!=null){
ACTIVE_LANG_POPUP.close_popup();
}
ACTIVE_LANG_POPUP=this;
maximized.inner_html("");
const stack=VStack()
.padding(0,10)
maximized.append(stack)
height=0;
width=0;
langs.iterate((lang)=>{
const span=Span(lang)
.color(lang===this.selected?THEME.tint_fg:"var(--codeblock_fg)")
.font_size(lang_font_size+1)
.line_height(lang_font_size+1+2)
.margin(6,0,6,0)
.on_click(()=>{
this.select(lang)
this.close_popup();
})
stack.append(span);
width=Math.max(width,span.clientWidth);
height+=(lang_font_size+1)+6*2;
});
width+=20;
window.addEventListener("mousedown", this.close_handler);
minimized.hide()
maximized.max_width(width);
maximized.max_height(height);
setTimeout(()=>maximized.opacity(1),100);
},
select:function (id,recursive=true){
if (recursive){
localStorage.setItem("libris_code_lang",id);
all_code_lang_headers.iterate((item)=>item.select(id, false))
} else {
this.set_selected(id);
if (langs.includes(id)){
langs.iterate((lang)=>{
if (lang===id){
code_pres[lang].show();
} else {
code_pres[lang].hide();
}
})
}
}
}
})
all_code_lang_headers.push(header);
block=CodeBlock()
.border(1,"var(--divider_bg)")
.padding(0)
.margin(SPACING/2,0,SPACING,0)
.position("relative")
.overflow("visible")
block.append(
header,
Divider()
.margin(0,0,0,0),
)
let index=0;
langs.iterate((lang)=>{
const pre=CodePre()
.padding(20,20)
.margin(0)
.inner_html(code[lang]);
pre.hide();
code_pres[lang]=pre;
block.append(pre);
++index;
})
index=0;
let default_index=0;
const default_lang=localStorage.getItem("libris_code_lang");
langs.iterate((lang)=>{
if (lang===default_lang){
default_index=index;
return true;
}
++index;
});
header.select(langs[default_index], false);
return block;
}
else {
throw Error(`Invalid value type of code block "${typeof code}".`)
}
}
const render_response_obj=(obj,is_rest_api_nested=false)=>{
const append=[];
if (obj.description!=null){
append.append(
Subtext()
.font_size(SUBTITLE_TEXT_FONT_SIZE)
.inner_html(obj.description)
.margin(5,0,0,0)
.flex_shrink(1)
.ellipsis_overflow(true)
);
}
const has_warnings=obj.warnings!=null&&obj.warnings.length>0;
if (obj.notes!=null&&obj.notes.length>0){
let i=0,max_i=obj.notes.length-1;
obj.notes.iterate((item)=>{
container.append(
Note(item)
.padding(10,20)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:(has_warnings?5:SPACING*0.8),0),
);
++i;
});
}
if (has_warnings){
let i=0,max_i=obj.warnings.length-1;
obj.warnings.iterate((item)=>{
container.append(
Warning(item)
.padding(10,20)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:SPACING*0.8,0),
);
++i;
});
}
if (obj.attributes!=null){
append.append(
render_expandable_info({
title:is_rest_api_nested?"Response Fields":"Attributes",
list:obj.attributes,
attributes_type:obj.attributes_type,
})
);
}
if (obj.code!=null){
const code=render_code_per_language("Response",obj.code)
.max_height(400);
if (is_rest_api_nested){
code.margin_bottom(5);
}
append.append(code);
}
return append;
}
if (block.return!=null&&Object.keys(block.return).length>0){
const title=Subtitle("Response")
if (add_titles_to_minimap){
PAGE_SECTION_ELEMENTS["Response"]=title;
}
fragment.append(
title,
Divider()
.margin_bottom(SPACING*0.5),
block.return.type==null?null :Span()
.inner_html(block.return.type)
.margin_bottom(0),
block.return.description==null?null :Subtext()
.font_size(SUBTITLE_TEXT_FONT_SIZE)
.inner_html(block.return.description)
.margin(5,0,0,0),
);
render_response_obj(block.return)
}
else if (block.is_rest_api===true&&block.response!=null&&Object.keys(block.response).length>0){
const title=Subtitle("Response")
if (add_titles_to_minimap){
PAGE_SECTION_ELEMENTS["Response"]=title;
}
fragment.append(
title,
Divider()
.margin_bottom(SPACING*0.5),
);
const container=VStack()
.width("100%");
fragment.append(container);
const render_restapi_obj=(code=null,mime_type=null,obj={},depth=0)=>{
if (obj.description==null&&obj.code==null){
if (depth===0){
Object.keys(obj).iterate((code)=>{
if (code==="block_type"){ return null;}
render_restapi_obj(code, null,obj[code],1);
})
} else if (depth===1){
Object.keys(obj).iterate((mime_type)=>{
if (mime_type==="block_type"){ return null;}
render_restapi_obj(code,mime_type,obj[mime_type],2);
})
}
return ;
}
if (container.children.length>0){
container.append(
Divider()
.margin(SPACING*0.5,0,SPACING*0.5,0)
)
}
container.append(
HStack(
Span()
.inner_html(code)
.font_size(PARAM_NAME_FONT_SIZE)
.line_height(PARAM_NAME_FONT_SIZE+2)
.flex_shrink(1)
.ellipsis_overflow(true),
Span()
.inner_html(code>=200&&code<300?"success":"error")
.color(code>=200&&code<300?"var(--tag_success)":"var(--tag_error)")
.font_size(PARAM_TYPE_FONT_SIZE)
.line_height(PARAM_TYPE_FONT_SIZE+2)
.margin_left(10)
.background("var(--codeline_bg)")
.padding(2.5,4)
.border_radius(5)
.flex_shrink(1)
.ellipsis_overflow(true),
mime_type==null?null :Span()
.inner_html(mime_type)
.font_size(PARAM_TYPE_FONT_SIZE)
.line_height(PARAM_TYPE_FONT_SIZE+2)
.margin_left(10)
.background("var(--codeline_bg)")
.color("var(--codeline_fg)")
.padding(2.5,4)
.border_radius(5)
.flex_shrink(1)
.ellipsis_overflow(true),
)
.font_family("var(--code_font)")
.color("var(--title_fg)")
.overflow_x("hidden")
.overflow_y("visible")
.text_overflow("ellipsis")
.wrap(false)
.stretch(true)
.center_vertical()
)
container.append(render_response_obj(obj,depth!==0));
}
render_restapi_obj(null, null,block.response);
}
if (block.usage!=undefined&&block.usage.code!=null){
const title=Subtitle("Usage")
if (add_titles_to_minimap){
PAGE_SECTION_ELEMENTS["Usage"]=title;
}
fragment.append(
title,
Divider()
.margin_bottom(SPACING*0.5),
block.usage.description==null?null :Subtext()
.font_size(SUBTITLE_TEXT_FONT_SIZE)
.inner_html(block.usage.description)
.margin(5,0,0,0),
);
const has_warnings=block.usage.warnings!=null&&block.usage.warnings.length>0;
if (block.usage.notes!=null&&block.usage.notes.length>0){
let i=0,max_i=block.usage.notes.length-1;
block.usage.notes.iterate((item)=>{
container.append(
Note(item)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:(has_warnings?5:SPACING*0.8),0),
);
++i;
});
}
if (has_warnings){
let i=0,max_i=block.usage.warnings.length-1;
block.usage.warnings.iterate((item)=>{
container.append(
Warning(item)
.font_size(14)
.margin(i===0?5:0,0,i<max_i?5:SPACING*0.8,0),
);
++i;
});
}
fragment.append(
render_code_per_language("Usage",block.usage.code)
);
}
if (block.suggested_pages!=null){
const title=Subtitle("Suggested Pages")
if (add_titles_to_minimap){
PAGE_SECTION_ELEMENTS["Suggested Pages"]=title;
}
fragment.append(
title,
Divider()
.margin_bottom(SPACING*0.5),
HStack(
ForEach(block.suggested_pages,(item)=>{
return SuggestedPage(item.image,item.title,item.description,item.links);
})
)
.width("100%")
.wrap(true)
.align_height()
.media(
"width >= 700px",
(e)=>stack.side_by_side({columns:2,hspacing:10,vspacing:10}),
(e)=>stack.side_by_side({columns:1,hspacing:10,vspacing:10}),
)
);
}
if (block.children!=null&&block.children.length>0){
block.children.iterate((child)=>{
fragment.append(
Divider()
.margin(SPACING*2,0,SPACING*0.5,0)
)
const child_fragment=this.render(child, false, true, false);
fragment.append(child_fragment);
});
}
}
if (recursive===false){
this.rendered_block=block;
}
if (recursive===false){
MINIMAP.render(block);
}
if (loader!==undefined){loader.remove();}
if (recursive===false){
this.append(fragment);
}
if (recursive===false){
this.render_footer(block);
}
if (recursive===false){
this.analytics_prev_id=block.id;
this.analytics_prev_timestamp=Date.now();
}
return fragment;
},
render_footer:function(block){
let next,prev;
if (block.next!=null){
next=get_block_by_id(block.next);
}
if (block.prev!=null){
prev=get_block_by_id(block.prev);
}
this.append(
HStack(
FeedbackWidget(),
Spacer(),
SuggestionsWidget(),
)
.wrap(true)
.margin_top(35)
.media(
"width >= 550px",
(e)=>{
e.wrap(false)
e.child(1).show()
e.child(2).margin_top(0)
},
(e)=>{
e.wrap(true)
e.child(1).hide()
e.child(2).margin_top(10)
},
),
HStack(
prev==null?null :Text(prev.title||prev.name)
.font_size(16)
.font_weight("bold")
.color("var(--title_fg)")
.padding(0)
.margin(0)
.max_width("50%")
.ellipsis_overflow()
.margin_right(5),
Spacer(),
next==null?null :Text(next.title||next.name)
.font_size(16)
.font_weight("bold")
.color("var(--title_fg)")
.padding(0)
.margin(0)
.max_width("50%")
.ellipsis_overflow()
.margin_left(5),
)
.margin_top(35),
HStack(
prev==null?null :HStack(
ImageMask(ARROW_LONG_IMG)
.frame(12.5,12.5)
.flex_shrink(0)
.margin_right(10)
.mask_color("var(--fg)")
.transform("rotate(180deg)"),
Span("Previous")
.ellipsis_overflow(),
)
.max_width("50%")
.stretch(false)
.font_size(14)
.padding(7.5,20)
.margin_top(10)
.border_radius(15)
.margin_right(5)
.background("var(--widget_bg)")
.center_vertical()
.border(1,"var(--divider_bg)")
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.on_click(()=>CONTENT.render(prev)),
Spacer(),
next==null?null :HStack(
Span("Next")
.ellipsis_overflow(),
ImageMask(ARROW_LONG_IMG)
.frame(12.5,12.5)
.flex_shrink(0)
.margin_left(10)
.mask_color("var(--fg)"),
)
.max_width("50%")
.display("inline-flex")
.flex_shrink(0)
.font_size(14)
.padding(7.5,20)
.margin_top(10)
.border_radius(15)
.margin_left(5)
.background("var(--widget_bg)")
.border(1,"var(--divider_bg)")
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
})
.center_vertical()
.on_click(()=>CONTENT.render(next))
),
Divider()
.margin(SPACING, null,SPACING, null),
HStack(
HStack(
ForEach(SOCIALS,(social,url)=>{
return ImageMask(`${SOCIALS_DIR}${social}.webp`)
.frame(15,15)
.mask_color("var(--fg)")
.margin_right(10)
.on_click(()=>vweb.utils.redirect(url));
})
),
Spacer(),
VStack(
Subtext("Powered by Libris")
.font_size(14)
.margin(0,0,SPACING*2,0)
.padding(0)
.center(),
),
)
.wrap(true)
.center_vertical()
)
}
})
console.log(SOCIALS);
const CONTENT_SCROLLER=Scroller(
CONTENT
)
.overflow_y("auto")
.overflow_x("hidden")
.height("100%")
.stretch(true)
.content
.padding_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT-10:TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.padding_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT-10:TOPBAR_HEIGHT+SPACING))
.scroll_behavior("smooth")
.center()
.parent()
.track
.margin_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT-10:TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.margin_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT-10:TOPBAR_HEIGHT+SPACING))
.parent()
.thumb
.parent()
.on_scroll(()=>{
if (CONTENT_SCROLLER.process_scroll===false||MINIMAP.items.length===0){
return null;
}
const offset=CONTENT_SCROLLER.scroll_top();
const min=MINIMAP.items[0].content_item.offsetTop;
const max=CONTENT_SCROLLER.content.scrollHeight-CONTENT_SCROLLER.content.clientHeight;
const spacing=TOPBAR_HEIGHT+25;
if (offset<=min-spacing){
MINIMAP.items.first().minimap_item.select();
}
else if (offset+spacing>=max){
MINIMAP.items.last().minimap_item.select();
}
else {
let index=0;
for (let i=0;i<MINIMAP.items.length;i++){
const item=MINIMAP.items[i];
const next_item=i<MINIMAP.items.length-1?MINIMAP.items[i+1]:null;
if (
(next_item!==null&&offset+spacing>=item.content_item.offsetTop&&(next_item==null||offset+spacing<next_item.content_item.offsetTop))||
(next_item===null&&offset>=item.content_item.offsetTop)
){
item.minimap_item.select();
break;
}
}
}
CONTENT_SCROLLER.process_scroll=false;
setTimeout(()=>{CONTENT_SCROLLER.process_scroll=true;},150)
})
.extend({
scroll_into:function(element,margin_top=0){
if (Array.isArray(element)){
return this.scroll_into(element[0],margin_top)
} else if (element==null){
return null;}
element.scrollIntoView();
this.scroll_top(
this.scroll_top()+
element.getBoundingClientRect().top-
TOPBAR.getBoundingClientRect().height-
margin_top
)
}
})
const MINIMAP=Scroller()
.padding(0,20,0,20)
.margin_right(0)
.max_width(300)
.min_width(200)
.height("100%")
.overflow_x("hidden")
.user_select("none")
.content
.min_width(178)
.padding_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT:TOPBAR_HEIGHT+SPACING+10)
.on_update_topbar_height((e)=>e.padding_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT:TOPBAR_HEIGHT+SPACING+10))
.padding_right(10)
.padding_bottom(SPACING)
.scroll_behavior("smooth")
.parent()
.track
.margin_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT:TOPBAR_HEIGHT+5)
.on_update_topbar_height((e)=>e.margin_top(vweb.utils.device_width()<600?TOPBAR_HEIGHT:TOPBAR_HEIGHT+5))
.background("none")
.parent()
.thumb
.background("none")
.parent()
.extend({
selected_item:null,
items:[],
render:function(block){
this.items=[];
this.selected_item=null;
this.remove_children();
this.append(
Text("ON THIS PAGE")
.color("var(--sidebar_fg)")
.flex_shrink(0)
.font_weight(700)
.padding(0)
.margin(0,0,SPACING/2,2+SPACING/2)
.wrap(false)
.font_size(13)
.line_height(16)
.overflow("hidden")
.text_overflow("ellipsis")
);
const add_block=(title,first=false)=>{
const stack=HStack(
VStack()
.background("none")
.frame(2,16)
.margin_right(10)
.flex_shrink(0)
.border_radius(2)
.assign_to_parent_as("divider"),
Text(title)
.color("var(--sidebar_fg)")
.padding(0)
.margin(0)
.wrap(false)
.font_size(13)
.line_height(16)
.font_weight(400)
.overflow("hidden")
.text_overflow("ellipsis")
.assign_to_parent_as("text"),
Spacer(),
)
.margin_bottom(SPACING*0.55)
.on_click(()=>{
CONTENT_SCROLLER.scroll_into(PAGE_SECTION_ELEMENTS[title],25)
stack.select();
})
.on_mouse_over((element)=>{
if (this.selected_item!==element){
element.child(0).background("var(--hover_fg)")
element.child(1).color("var(--hover_fg)")
}
})
.on_mouse_out((element)=>{
if (this.selected_item!==element){
element.child(0).background("none")
element.child(1).color("var(--sidebar_fg)")
}
})
.extend({
select:function (){
if (MINIMAP.selected_item===this){
return this;
}
if (MINIMAP.selected_item!=null){
MINIMAP.selected_item.unselect();
}
this.divider.background(THEME.tint_fg);
this.divider.on_theme_update((e)=>{
e.background(THEME.tint_fg);
});
this.text.font_weight(600);
this.text.color(THEME.tint_fg);
this.text.on_theme_update((e)=>{
e.color(THEME.tint_fg);
});
MINIMAP.selected_item=this;
},
unselect:function (){
this.divider.background("none");
this.divider.remove_on_theme_update()
this.text.font_weight(400);
this.text.color("var(--sidebar_fg)");
this.text.remove_on_theme_update();
MINIMAP.selected_item=null;
}
})
this.append(stack);
if (first){
stack.select();
}
this.items.push({
title,
content_item:PAGE_SECTION_ELEMENTS[title],
minimap_item:stack,
})
return stack;
}
if (block.is_custom===true){
let block_index=0;
block.blocks.iterate((child)=>{
if (PAGE_SECTION_ELEMENTS[child.data]!==undefined){
add_block(child.data,block_index===0)
}
++block_index;
});
}
else {
let block_index=0;
Object.keys(PAGE_SECTION_ELEMENTS).iterate((key)=>{
add_block(key,block_index===0);
++block_index;
})
}
},
})
if (vweb.utils.device_width()<MIN_MINIMAP_WIDTH){
MINIMAP.hide();
}
const RESPONSE_STATUS=VStack(
HStack(
ImageMask(CHECK_IMG)
.frame(11,11)
.margin_top(1)
.margin_right(10)
.hide()
.assign_to_parent_as("img_success"),
ImageMask(CLOSE_IMG)
.frame(9,9)
.margin_top(1)
.margin_right(10)
.hide()
.assign_to_parent_as("img_error"),
Span()
.assign_to_parent_as("text"),
)
.border_radius(25)
.padding(7.5,15)
.assign_to_parent_as("content")
.background("red")
.frame("100%","100%")
.border(1,"transparent")
.center_vertical()
)
.background("var(--bg)")
.hide()
.overflow("hidden")
.font_size(15)
.border_radius(25)
.position(null, null,-100,"50%")
.transform("translate(-50%)")
.shadow(`0px 0px 5px #00000050`)
.z_index(101)
.wrap(true)
.text_center()
.extend({
popup:function(text,type="message"){
if (typeof text!=="string"){
text=text.toString();
}
this.content.text.text(text);
if (type=="message"){
this.content.border_color("var(--tag_success)")
this.content.color("var(--tag_success)")
this.content.background("var(--tag_success_20)")
this.content.img_success.mask_color("var(--tag_success)")
this.content.img_success.show();
this.content.img_error.hide();
} else if (type=="warning"){
this.content.border_color("#FFFC79")
this.content.color("#FFFC79")
this.content.background("#FFFC7920")
this.content.img_error.mask_color("#FFFC79")
this.content.img_error.show();
this.content.img_success.hide();
} else {
this.content.border_color("var(--tag_error)")
this.content.color("var(--tag_error)")
this.content.background("var(--tag_error_20)")
this.content.img_error.mask_color("var(--tag_error)")
this.content.img_error.show();
this.content.img_success.hide();
}
let delay=2000;
if (text.length>=200){
delay=5000;
}
else if (text.length>=50){
delay=4000;
}
else if (text.length>=25){
delay=3000;
}
this.show();
this.animate({
keyframes:[
Style()
.bottom(-100)
.opacity(1.0)
.duration(300),
Style()
.bottom(25)
.opacity(1.0)
.delay(delay)
.duration(500),
Style()
.bottom(100)
.opacity(0.0),
],
persistent:true,
});
},
message:function(text){ this.popup(text,"message");},
success:function(text){ this.popup(text,"message");},
error:function(text){
if (text.error){
this.popup(text.error,"error");
} else if (text.message){
this.popup(text.message,"error");
} else {
this.popup(text,"error");
}
},
warning:function(text){ this.popup(text,"warning");}
})
.z_index(10001)
.focusable(false)
function on_resize(){
if (ACTIVE_LANG_POPUP!=null){
ACTIVE_LANG_POPUP.close_popup();
}
const width=vweb.utils.device_width();
if (width<MIN_MINIMAP_WIDTH){
SIDEBAR.set_desktop(false);
} else {
SIDEBAR.set_desktop(true);
}
if (width<MIN_SIDEBAR_WIDTH){
SIDEBAR.minimize();
} else if (width>1750){
SIDEBAR.maximize();
}
if (width<MIN_MINIMAP_WIDTH){
MINIMAP.hide();
} else {
MINIMAP.show();
}
if (width<600){
CONTENT.padding(0,25);
CONTENT_SCROLLER.content
.padding_top(TOPBAR_HEIGHT-10)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT-10))
CONTENT_SCROLLER.track
.margin_top(TOPBAR_HEIGHT-10)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT-10))
MINIMAP.content
.padding_top(TOPBAR_HEIGHT)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT))
MINIMAP.track
.margin_top(TOPBAR_HEIGHT)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT))
} else if (width<MIN_MINIMAP_WIDTH){
CONTENT.padding(0,50);
CONTENT_SCROLLER.content
.padding_top(TOPBAR_HEIGHT)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT))
CONTENT_SCROLLER.track
.margin_top(TOPBAR_HEIGHT+5)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+5))
MINIMAP.content
.padding_top(TOPBAR_HEIGHT+10)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+10))
MINIMAP.track
.margin_top(TOPBAR_HEIGHT+5)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+5))
} else if (width<1700){
CONTENT.padding(0,FULL_SCREEN?75:50);
CONTENT_SCROLLER.content
.padding_top(TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+SPACING))
CONTENT_SCROLLER.track
.margin_top(TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+SPACING))
MINIMAP.content
.padding_top(TOPBAR_HEIGHT+SPACING+10)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+SPACING+10))
MINIMAP.track
.margin_top(TOPBAR_HEIGHT+5)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+5))
} else {
CONTENT.padding(0,FULL_SCREEN?100:50)
CONTENT_SCROLLER.content
.padding_top(TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+SPACING))
CONTENT_SCROLLER.track
.margin_top(TOPBAR_HEIGHT+SPACING)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+SPACING))
MINIMAP.content
.padding_top(TOPBAR_HEIGHT+SPACING+10)
.on_update_topbar_height((e)=>e.padding_top(TOPBAR_HEIGHT+SPACING+10))
MINIMAP.track
.margin_top(TOPBAR_HEIGHT+5)
.on_update_topbar_height((e)=>e.margin_top(TOPBAR_HEIGHT+5))
}
}
window.addEventListener("resize",on_resize);
const VIEW=View(
Background(),
VStack(
TOPBAR,
HStack(
SIDEBAR,
VStack(
HStack(
CONTENT_SCROLLER,
MINIMAP,
!HEADLESS?null :ImageMask(MENU_IMG)
.position(20,20, null, null)
.flex_shrink(0)
.frame(15,15)
.border_radius("50%")
.mask_color(THEME.title_fg)
.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
.on_theme_update((e)=>{
e.hover_brightness(THEME.click_brightness,THEME.hover_brightness)
e.mask_color(THEME.title_fg)
})
.on_click(()=>SIDEBAR.toggle()),
)
.center()
.overflow("hidden")
.height("100%")
.max_width("100%")
)
.position("relative")
.height("100%")
.stretch(true)
.overflow("hidden")
)
.height("100%")
.max_width("100%")
.overflow("hidden")
)
.max_width(FULL_SCREEN?"auto":1500)
.position("relative")
.frame("100%","100%")
.flex("1 1 auto")
.overflow("hidden"),
SEARCH_POPUP,
SUGGESTIONS_POPUP,
RESPONSE_STATUS,
)
.center()
.font_family("var(--font)")
.color("var(--fg)")
.overflow("hidden")
document.body.appendChild(VIEW);
SIDEBAR_CONTENT.render(true).then(()=>{
document.getElementById("splash_screen").remove()
});
vweb.utils.on_load(()=>{
on_resize();
});
window.addEventListener('beforeunload', async function(event){
await ANALYTICS.submit();
});
setTimeout(()=>ANALYTICS.submit(),5000)
